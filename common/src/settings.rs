use common_macros::route_request_response;

use crate::New;
use crate::Schema;
use crate::Terraform;

/// Amazon Web Services account configuration
#[apply(New!)]
#[apply(Terraform!)]
#[apply(Schema!)]
pub struct AwsAccount {
    /// UUID generated by Satounki
    #[schema(example = "5da0230c-4eeb-4840-9ffa-d97f45a12182")]
    pub id: String,
    /// Meaningful alias for the account to be used by Satounki users
    #[schema(example = "cool-company-production")]
    pub account: String,
    /// Number of approvals required for access requests made to the account
    #[schema(example = 1)]
    pub approvals_required: i32,
    /// Require additional approval by an Administrator for access requests made to the account
    pub admin_approval_required: bool,
}

route_request_response! {
    #[Post] SettingsAwsAccount(NewAwsAccount) -> AwsAccount,
    #[Put]  SettingsAwsAccount(NewAwsAccount) -> AwsAccount,
    #[Get]  SettingsAwsAccounts() -> Vec<AwsAccount>,
    #[Get]  SettingsAwsAccount() -> AwsAccount,
}

/// Cloudflare account configuration
#[apply(New!)]
#[apply(Terraform!)]
#[apply(Schema!)]
pub struct CloudflareAccount {
    /// UUID generated by Satounki
    #[schema(example = "5da0230c-4eeb-4840-9ffa-d97f45a12182")]
    pub id: String,
    /// Meaningful alias for the account to be used by Satounki users
    #[schema(example = "cool-company.com")]
    pub account: String,
    /// Number of approvals required for access requests made to the account
    #[schema(example = 1)]
    pub approvals_required: i32,
    /// Require additional approval by an Administrator for access requests made to the account
    pub admin_approval_required: bool,
}

route_request_response! {
    #[Post] SettingsCloudflareAccount(NewCloudflareAccount) -> CloudflareAccount,
    #[Put]  SettingsCloudflareAccount(NewCloudflareAccount) -> CloudflareAccount,
    #[Get]  SettingsCloudflareAccounts() -> Vec<CloudflareAccount>,
    #[Get]  SettingsCloudflareAccount() -> CloudflareAccount,
}

/// Google Cloud Platform project configuration
#[apply(New!)]
#[apply(Terraform!)]
#[apply(Schema!)]
pub struct GcpProject {
    /// UUID generated by Satounki
    #[schema(example = "5da0230c-4eeb-4840-9ffa-d97f45a12182")]
    pub id: String,
    /// Meaningful alias for the project to be used by Satounki users
    #[schema(example = "cool-company-production")]
    pub project: String,
    /// Number of approvals required for access requests made to the project
    #[schema(example = 1)]
    pub approvals_required: i32,
    /// Require additional approval by an Administrator for access requests made to the project
    pub admin_approval_required: bool,
}

route_request_response! {
    #[Post] SettingsGcpProject(NewGcpProject) -> GcpProject,
    #[Put]  SettingsGcpProject(NewGcpProject) -> GcpProject,
    #[Get]  SettingsGcpProjects() -> Vec<GcpProject>,
    #[Get]  SettingsGcpProject() -> GcpProject,
}

/// Company API token for automation use
#[apply(Schema!)]
pub struct ApiToken {
    /// Token
    #[schema(example = "super-duper-secret-api-token")]
    pub token: String,
}

route_request_response! {
    #[Get] SettingsToken() -> ApiToken,
    #[Put] SettingsToken() -> ApiToken,
}
