/**
 * Error returned by the Satounki API
 */
export interface ErrorResponse {
  /**
   * HTTP error code
   */
  code: number;
  /**
   * User-friendly error message
   */
  error: string;
  [property: string]: any;
}

/**
 * Satounki Policy definition
 */
export interface PoliciesGetResponse {
  /**
   * Amazon Web Services policy ARNs associated with this policy
   */
  aws?: string[] | null;
  /**
   * Cloudflare roles associated with this policy
   */
  cloudflare?: CloudflareRole[] | null;
  /**
   * Description of the permissions granted by this policy
   */
  description: string;
  /**
   * Google Cloud Platform roles associated with this policy
   */
  gcp?: string[] | null;
  /**
   * UUID generated by Satounki
   */
  id: string;
  /**
   * Succinct, descriptive name for the policy in snake_case
   */
  name: string;
  [property: string]: any;
}

/**
 * Cloudflare role
 */
export enum CloudflareRole {
  Administrator = "Administrator",
  AdministratorReadOnly = "AdministratorReadOnly",
  Analytics = "Analytics",
  AuditLogsViewer = "AuditLogsViewer",
  Billing = "Billing",
  CachePurge = "CachePurge",
  CloudflareAccess = "CloudflareAccess",
  CloudflareGateway = "CloudflareGateway",
  CloudflareImages = "CloudflareImages",
  CloudflareStream = "CloudflareStream",
  CloudflareWorkersAdmin = "CloudflareWorkersAdmin",
  CloudflareZeroTrust = "CloudflareZeroTrust",
  CloudflareZeroTrustPii = "CloudflareZeroTrustPii",
  CloudflareZeroTrustReadOnly = "CloudflareZeroTrustReadOnly",
  CloudflareZeroTrustReporting = "CloudflareZeroTrustReporting",
  DNS = "Dns",
  Firewall = "Firewall",
  LoadBalancer = "LoadBalancer",
  LogShare = "LogShare",
  LogShareReader = "LogShareReader",
}

/**
 * Satounki Policy definition
 */
export interface PolicyGetResponse {
  /**
   * Amazon Web Services policy ARNs associated with this policy
   */
  aws?: string[] | null;
  /**
   * Cloudflare roles associated with this policy
   */
  cloudflare?: CloudflareRole[] | null;
  /**
   * Description of the permissions granted by this policy
   */
  description: string;
  /**
   * Google Cloud Platform roles associated with this policy
   */
  gcp?: string[] | null;
  /**
   * UUID generated by Satounki
   */
  id: string;
  /**
   * Succinct, descriptive name for the policy in snake_case
   */
  name: string;
  [property: string]: any;
}

/**
 * Satounki Policy definition
 */
export interface PolicyNameGetResponse {
  /**
   * Amazon Web Services policy ARNs associated with this policy
   */
  aws?: string[] | null;
  /**
   * Cloudflare roles associated with this policy
   */
  cloudflare?: CloudflareRole[] | null;
  /**
   * Description of the permissions granted by this policy
   */
  description: string;
  /**
   * Google Cloud Platform roles associated with this policy
   */
  gcp?: string[] | null;
  /**
   * UUID generated by Satounki
   */
  id: string;
  /**
   * Succinct, descriptive name for the policy in snake_case
   */
  name: string;
  [property: string]: any;
}

/**
 * Satounki Policy definition
 */
export interface PolicyPostRequest {
  /**
   * Amazon Web Services policy ARNs associated with this policy
   */
  aws?: string[] | null;
  /**
   * Cloudflare roles associated with this policy
   */
  cloudflare?: CloudflareRole[] | null;
  /**
   * Description of the permissions granted by this policy
   */
  description: string;
  /**
   * Google Cloud Platform roles associated with this policy
   */
  gcp?: string[] | null;
  /**
   * Succinct, descriptive name for the policy in snake_case
   */
  name: string;
  [property: string]: any;
}

/**
 * Satounki Policy definition
 */
export interface PolicyPostResponse {
  /**
   * Amazon Web Services policy ARNs associated with this policy
   */
  aws?: string[] | null;
  /**
   * Cloudflare roles associated with this policy
   */
  cloudflare?: CloudflareRole[] | null;
  /**
   * Description of the permissions granted by this policy
   */
  description: string;
  /**
   * Google Cloud Platform roles associated with this policy
   */
  gcp?: string[] | null;
  /**
   * UUID generated by Satounki
   */
  id: string;
  /**
   * Succinct, descriptive name for the policy in snake_case
   */
  name: string;
  [property: string]: any;
}

/**
 * Satounki Policy definition
 */
export interface PolicyPutRequest {
  /**
   * Amazon Web Services policy ARNs associated with this policy
   */
  aws?: string[] | null;
  /**
   * Cloudflare roles associated with this policy
   */
  cloudflare?: CloudflareRole[] | null;
  /**
   * Description of the permissions granted by this policy
   */
  description: string;
  /**
   * Google Cloud Platform roles associated with this policy
   */
  gcp?: string[] | null;
  /**
   * Succinct, descriptive name for the policy in snake_case
   */
  name: string;
  [property: string]: any;
}

/**
 * Satounki Policy definition
 */
export interface PolicyPutResponse {
  /**
   * Amazon Web Services policy ARNs associated with this policy
   */
  aws?: string[] | null;
  /**
   * Cloudflare roles associated with this policy
   */
  cloudflare?: CloudflareRole[] | null;
  /**
   * Description of the permissions granted by this policy
   */
  description: string;
  /**
   * Google Cloud Platform roles associated with this policy
   */
  gcp?: string[] | null;
  /**
   * UUID generated by Satounki
   */
  id: string;
  /**
   * Succinct, descriptive name for the policy in snake_case
   */
  name: string;
  [property: string]: any;
}

/**
 * Access request
 */
export interface RequestAliasGetResponse {
  /**
   * Access request permissions expiry timestamp
   */
  access_expiry?: Date | null;
  /**
   * Administrator approval requirement
   */
  admin_approval_required: boolean;
  /**
   * Human-friendly alias generated by Satounki
   */
  alias: string;
  /**
   * Request approval records
   */
  approvals?: RequestAliasGetResponseUserInteraction[] | null;
  /**
   * Number of approvals required
   */
  approvals_required: number;
  /**
   * Approval status
   */
  approved: boolean;
  /**
   * Amazon Web Services policy ARNs requested
   */
  aws?: string[] | null;
  /**
   * Amazon Web Services account to grant permissions on
   */
  aws_account?: null | string;
  /**
   * Request cancellation record
   */
  cancellation?: null | RequestAliasGetResponseUserInteraction;
  /**
   * Cloudflare roles requested
   */
  cloudflare?: CloudflareRole[] | null;
  /**
   * Cloudflare account to grant permissions on
   */
  cloudflare_account?: null | string;
  /**
   * Request extension records
   */
  extensions?: RequestAliasGetResponseUserInteraction[] | null;
  /**
   * Google Cloud Platform roles requested
   */
  gcp?: string[] | null;
  /**
   * Google Cloud Platform project to grant permissions on
   */
  gcp_project?: null | string;
  /**
   * UUID generated by Satounki
   */
  id: string;
  /**
   * Reason for the request
   */
  justification: string;
  /**
   * Duration of the request in minutes
   */
  minutes: number;
  /**
   * Policy name
   */
  policy: string;
  /**
   * Request rejection record
   */
  rejection?: null | RequestAliasGetResponseUserInteraction;
  /**
   * Email address of the requester
   */
  requester: string;
  /**
   * Service-specific username aliases of the requester
   */
  requester_aliases: RequestAliasGetResponseRequesterAliases;
  /**
   * Current state in the access request lifecycle
   */
  state: AccessRequestState;
  /**
   * Access request timestamp
   */
  timestamp: Date;
  [property: string]: any;
}

/**
 * Record of a user interaction with an access request
 */
export interface RequestAliasGetResponseUserInteraction {
  /**
   * User interaction timestamp
   */
  timestamp: Date;
  /**
   * Interacting user's email address
   */
  user: string;
  [property: string]: any;
}

/**
 * Service-specific username aliases of the requester
 *
 * Service-specific username aliases
 */
export interface RequestAliasGetResponseRequesterAliases {
  /**
   * Username on Amazon Web Services, may not be an email address
   */
  aws?: null | string;
  /**
   * Email address registered with Cloudflare
   */
  cloudflare?: null | string;
  /**
   * Email address registered with Google Cloud Platform
   */
  gcp?: null | string;
  [property: string]: any;
}

/**
 * Current state in the access request lifecycle
 *
 * State in the access request lifecycle
 *
 * Request has been submitted and may or may not have met required approvals
 *
 * Request has been approved and the permissions associated with the policy have been
 * granted
 *
 * Request has expired or been marked as completed early by the requesting user
 *
 * Request has been cancelled before approval by the requesting user
 *
 * Request has been rejected by an Approver or an Administrator
 *
 * Request was active, but revoked by an Administrator
 *
 * State of the requests
 */
export enum AccessRequestState {
  Active = "active",
  Cancelled = "cancelled",
  Completed = "completed",
  Pending = "pending",
  Rejected = "rejected",
  Revoked = "revoked",
}

/**
 * Extend an active request by N minutes
 */
export interface RequestAliasPatchRequestClass {
  extend: number;
}

/**
 * Add an approval to a pending request
 *
 * Reject a pending request
 *
 * Cancel a pending request
 *
 * Complete an active request
 *
 * Revoke permissions from an active request
 */
export enum RequestAliasPatchRequestEnum {
  Approve = "approve",
  Cancel = "cancel",
  Complete = "complete",
  Reject = "reject",
  Revoke = "revoke",
}

/**
 * Access request for policy permissions
 */
export interface RequestPolicyPostRequest {
  /**
   * AWS account to grant permissions on, if the policy includes AWS policy ARNs
   */
  aws_account?: null | string;
  /**
   * Cloudflare account to grant permissions on, if the policy includes Cloudflare roles
   */
  cloudflare_account?: null | string;
  /**
   * GCP project to grant permissions on, if the policy includes GCP roles
   */
  gcp_project?: null | string;
  /**
   * Reason for the request
   */
  justification: string;
  /**
   * Duration of the request in minutes
   */
  minutes: number;
  [property: string]: any;
}

/**
 * Access request confirmation
 */
export interface RequestPolicyPostResponse {
  /**
   * Human-friendly alias generated by Satounki
   */
  request_alias: string;
  /**
   * UUID generated by Satounki
   */
  request_id: string;
  [property: string]: any;
}

/**
 * Query parameters for the GET /v1/requests endpoint
 */
export interface RequestsGetQueryParams {
  /**
   * Number of requests to return
   */
  count: number;
  /**
   * State of the requests
   */
  state: AccessRequestState;
  [property: string]: any;
}

/**
 * Access request
 */
export interface RequestsGetResponse {
  /**
   * Access request permissions expiry timestamp
   */
  access_expiry?: Date | null;
  /**
   * Administrator approval requirement
   */
  admin_approval_required: boolean;
  /**
   * Human-friendly alias generated by Satounki
   */
  alias: string;
  /**
   * Request approval records
   */
  approvals?: RequestsGetResponseUserInteraction[] | null;
  /**
   * Number of approvals required
   */
  approvals_required: number;
  /**
   * Approval status
   */
  approved: boolean;
  /**
   * Amazon Web Services policy ARNs requested
   */
  aws?: string[] | null;
  /**
   * Amazon Web Services account to grant permissions on
   */
  aws_account?: null | string;
  /**
   * Request cancellation record
   */
  cancellation?: null | RequestsGetResponseUserInteraction;
  /**
   * Cloudflare roles requested
   */
  cloudflare?: CloudflareRole[] | null;
  /**
   * Cloudflare account to grant permissions on
   */
  cloudflare_account?: null | string;
  /**
   * Request extension records
   */
  extensions?: RequestsGetResponseUserInteraction[] | null;
  /**
   * Google Cloud Platform roles requested
   */
  gcp?: string[] | null;
  /**
   * Google Cloud Platform project to grant permissions on
   */
  gcp_project?: null | string;
  /**
   * UUID generated by Satounki
   */
  id: string;
  /**
   * Reason for the request
   */
  justification: string;
  /**
   * Duration of the request in minutes
   */
  minutes: number;
  /**
   * Policy name
   */
  policy: string;
  /**
   * Request rejection record
   */
  rejection?: null | RequestsGetResponseUserInteraction;
  /**
   * Email address of the requester
   */
  requester: string;
  /**
   * Service-specific username aliases of the requester
   */
  requester_aliases: RequestsGetResponseRequesterAliases;
  /**
   * Current state in the access request lifecycle
   */
  state: AccessRequestState;
  /**
   * Access request timestamp
   */
  timestamp: Date;
  [property: string]: any;
}

/**
 * Record of a user interaction with an access request
 */
export interface RequestsGetResponseUserInteraction {
  /**
   * User interaction timestamp
   */
  timestamp: Date;
  /**
   * Interacting user's email address
   */
  user: string;
  [property: string]: any;
}

/**
 * Service-specific username aliases of the requester
 *
 * Service-specific username aliases
 */
export interface RequestsGetResponseRequesterAliases {
  /**
   * Username on Amazon Web Services, may not be an email address
   */
  aws?: null | string;
  /**
   * Email address registered with Cloudflare
   */
  cloudflare?: null | string;
  /**
   * Email address registered with Google Cloud Platform
   */
  gcp?: null | string;
  [property: string]: any;
}

/**
 * Amazon Web Services account configuration
 */
export interface SettingsAwsAccountGetResponse {
  /**
   * Meaningful alias for the account to be used by Satounki users
   */
  account: string;
  /**
   * Require additional approval by an Administrator for access requests made to the account
   */
  admin_approval_required: boolean;
  /**
   * Number of approvals required for access requests made to the account
   */
  approvals_required: number;
  /**
   * UUID generated by Satounki
   */
  id: string;
  [property: string]: any;
}

/**
 * Amazon Web Services account configuration
 */
export interface SettingsAwsAccountPostRequest {
  /**
   * Meaningful alias for the account to be used by Satounki users
   */
  account: string;
  /**
   * Require additional approval by an Administrator for access requests made to the account
   */
  admin_approval_required: boolean;
  /**
   * Number of approvals required for access requests made to the account
   */
  approvals_required: number;
  [property: string]: any;
}

/**
 * Amazon Web Services account configuration
 */
export interface SettingsAwsAccountPostResponse {
  /**
   * Meaningful alias for the account to be used by Satounki users
   */
  account: string;
  /**
   * Require additional approval by an Administrator for access requests made to the account
   */
  admin_approval_required: boolean;
  /**
   * Number of approvals required for access requests made to the account
   */
  approvals_required: number;
  /**
   * UUID generated by Satounki
   */
  id: string;
  [property: string]: any;
}

/**
 * Amazon Web Services account configuration
 */
export interface SettingsAwsAccountPutRequest {
  /**
   * Meaningful alias for the account to be used by Satounki users
   */
  account: string;
  /**
   * Require additional approval by an Administrator for access requests made to the account
   */
  admin_approval_required: boolean;
  /**
   * Number of approvals required for access requests made to the account
   */
  approvals_required: number;
  [property: string]: any;
}

/**
 * Amazon Web Services account configuration
 */
export interface SettingsAwsAccountPutResponse {
  /**
   * Meaningful alias for the account to be used by Satounki users
   */
  account: string;
  /**
   * Require additional approval by an Administrator for access requests made to the account
   */
  admin_approval_required: boolean;
  /**
   * Number of approvals required for access requests made to the account
   */
  approvals_required: number;
  /**
   * UUID generated by Satounki
   */
  id: string;
  [property: string]: any;
}

/**
 * Amazon Web Services account configuration
 */
export interface SettingsAwsAccountsGetResponse {
  /**
   * Meaningful alias for the account to be used by Satounki users
   */
  account: string;
  /**
   * Require additional approval by an Administrator for access requests made to the account
   */
  admin_approval_required: boolean;
  /**
   * Number of approvals required for access requests made to the account
   */
  approvals_required: number;
  /**
   * UUID generated by Satounki
   */
  id: string;
  [property: string]: any;
}

/**
 * Cloudflare account configuration
 */
export interface SettingsCloudflareAccountGetResponse {
  /**
   * Meaningful alias for the account to be used by Satounki users
   */
  account: string;
  /**
   * Require additional approval by an Administrator for access requests made to the account
   */
  admin_approval_required: boolean;
  /**
   * Number of approvals required for access requests made to the account
   */
  approvals_required: number;
  /**
   * UUID generated by Satounki
   */
  id: string;
  [property: string]: any;
}

/**
 * Cloudflare account configuration
 */
export interface SettingsCloudflareAccountPostRequest {
  /**
   * Meaningful alias for the account to be used by Satounki users
   */
  account: string;
  /**
   * Require additional approval by an Administrator for access requests made to the account
   */
  admin_approval_required: boolean;
  /**
   * Number of approvals required for access requests made to the account
   */
  approvals_required: number;
  [property: string]: any;
}

/**
 * Cloudflare account configuration
 */
export interface SettingsCloudflareAccountPostResponse {
  /**
   * Meaningful alias for the account to be used by Satounki users
   */
  account: string;
  /**
   * Require additional approval by an Administrator for access requests made to the account
   */
  admin_approval_required: boolean;
  /**
   * Number of approvals required for access requests made to the account
   */
  approvals_required: number;
  /**
   * UUID generated by Satounki
   */
  id: string;
  [property: string]: any;
}

/**
 * Cloudflare account configuration
 */
export interface SettingsCloudflareAccountPutRequest {
  /**
   * Meaningful alias for the account to be used by Satounki users
   */
  account: string;
  /**
   * Require additional approval by an Administrator for access requests made to the account
   */
  admin_approval_required: boolean;
  /**
   * Number of approvals required for access requests made to the account
   */
  approvals_required: number;
  [property: string]: any;
}

/**
 * Cloudflare account configuration
 */
export interface SettingsCloudflareAccountPutResponse {
  /**
   * Meaningful alias for the account to be used by Satounki users
   */
  account: string;
  /**
   * Require additional approval by an Administrator for access requests made to the account
   */
  admin_approval_required: boolean;
  /**
   * Number of approvals required for access requests made to the account
   */
  approvals_required: number;
  /**
   * UUID generated by Satounki
   */
  id: string;
  [property: string]: any;
}

/**
 * Cloudflare account configuration
 */
export interface SettingsCloudflareAccountsGetResponse {
  /**
   * Meaningful alias for the account to be used by Satounki users
   */
  account: string;
  /**
   * Require additional approval by an Administrator for access requests made to the account
   */
  admin_approval_required: boolean;
  /**
   * Number of approvals required for access requests made to the account
   */
  approvals_required: number;
  /**
   * UUID generated by Satounki
   */
  id: string;
  [property: string]: any;
}

/**
 * Google Cloud Platform project configuration
 */
export interface SettingsGcpProjectGetResponse {
  /**
   * Require additional approval by an Administrator for access requests made to the project
   */
  admin_approval_required: boolean;
  /**
   * Number of approvals required for access requests made to the project
   */
  approvals_required: number;
  /**
   * UUID generated by Satounki
   */
  id: string;
  /**
   * Meaningful alias for the project to be used by Satounki users
   */
  project: string;
  [property: string]: any;
}

/**
 * Google Cloud Platform project configuration
 */
export interface SettingsGcpProjectPostRequest {
  /**
   * Require additional approval by an Administrator for access requests made to the project
   */
  admin_approval_required: boolean;
  /**
   * Number of approvals required for access requests made to the project
   */
  approvals_required: number;
  /**
   * Meaningful alias for the project to be used by Satounki users
   */
  project: string;
  [property: string]: any;
}

/**
 * Google Cloud Platform project configuration
 */
export interface SettingsGcpProjectPostResponse {
  /**
   * Require additional approval by an Administrator for access requests made to the project
   */
  admin_approval_required: boolean;
  /**
   * Number of approvals required for access requests made to the project
   */
  approvals_required: number;
  /**
   * UUID generated by Satounki
   */
  id: string;
  /**
   * Meaningful alias for the project to be used by Satounki users
   */
  project: string;
  [property: string]: any;
}

/**
 * Google Cloud Platform project configuration
 */
export interface SettingsGcpProjectPutRequest {
  /**
   * Require additional approval by an Administrator for access requests made to the project
   */
  admin_approval_required: boolean;
  /**
   * Number of approvals required for access requests made to the project
   */
  approvals_required: number;
  /**
   * Meaningful alias for the project to be used by Satounki users
   */
  project: string;
  [property: string]: any;
}

/**
 * Google Cloud Platform project configuration
 */
export interface SettingsGcpProjectPutResponse {
  /**
   * Require additional approval by an Administrator for access requests made to the project
   */
  admin_approval_required: boolean;
  /**
   * Number of approvals required for access requests made to the project
   */
  approvals_required: number;
  /**
   * UUID generated by Satounki
   */
  id: string;
  /**
   * Meaningful alias for the project to be used by Satounki users
   */
  project: string;
  [property: string]: any;
}

/**
 * Google Cloud Platform project configuration
 */
export interface SettingsGcpProjectsGetResponse {
  /**
   * Require additional approval by an Administrator for access requests made to the project
   */
  admin_approval_required: boolean;
  /**
   * Number of approvals required for access requests made to the project
   */
  approvals_required: number;
  /**
   * UUID generated by Satounki
   */
  id: string;
  /**
   * Meaningful alias for the project to be used by Satounki users
   */
  project: string;
  [property: string]: any;
}

/**
 * Service-specific username aliases
 */
export interface UserAliasesGetResponse {
  /**
   * Username on Amazon Web Services, may not be an email address
   */
  aws?: null | string;
  /**
   * Email address registered with Cloudflare
   */
  cloudflare?: null | string;
  /**
   * Email address registered with Google Cloud Platform
   */
  gcp?: null | string;
  [property: string]: any;
}

/**
 * Service-specific username aliases
 */
export interface UserAliasesPostRequest {
  /**
   * Username on Amazon Web Services, may not be an email address
   */
  aws?: null | string;
  /**
   * Email address registered with Cloudflare
   */
  cloudflare?: null | string;
  /**
   * Email address registered with Google Cloud Platform
   */
  gcp?: null | string;
  [property: string]: any;
}

/**
 * Service-specific username aliases
 */
export interface UserAliasesPostResponse {
  /**
   * Username on Amazon Web Services, may not be an email address
   */
  aws?: null | string;
  /**
   * Email address registered with Cloudflare
   */
  cloudflare?: null | string;
  /**
   * Email address registered with Google Cloud Platform
   */
  gcp?: null | string;
  [property: string]: any;
}

/**
 * Service-specific username aliases
 */
export interface UserAliasesPutRequest {
  /**
   * Username on Amazon Web Services, may not be an email address
   */
  aws?: null | string;
  /**
   * Email address registered with Cloudflare
   */
  cloudflare?: null | string;
  /**
   * Email address registered with Google Cloud Platform
   */
  gcp?: null | string;
  [property: string]: any;
}

/**
 * Service-specific username aliases
 */
export interface UserAliasesPutResponse {
  /**
   * Username on Amazon Web Services, may not be an email address
   */
  aws?: null | string;
  /**
   * Email address registered with Cloudflare
   */
  cloudflare?: null | string;
  /**
   * Email address registered with Google Cloud Platform
   */
  gcp?: null | string;
  [property: string]: any;
}

/**
 * Satounki user access roles
 *
 * View and make access requests
 *
 * Approve access requests
 *
 * Change user roles, grant administrator approval to access requests
 */
export enum UserRolesPutResponse {
  Administrator = "administrator",
  Approver = "approver",
  User = "user",
}

/**
 * User API token for personal use
 */
export interface UserTokenGetResponse {
  /**
   * Token
   */
  token: string;
  [property: string]: any;
}

/**
 * User API token for personal use
 */
export interface UserTokenPutResponse {
  /**
   * Token
   */
  token: string;
  [property: string]: any;
}

export type UserRolesPutRequest = UserRolesPutResponse;
export type UserRolesPostRequest = UserRolesPutResponse;
export type UserRolesGetResponse = UserRolesPutResponse;
export type UserRolesPostResponse = UserRolesPutResponse;
